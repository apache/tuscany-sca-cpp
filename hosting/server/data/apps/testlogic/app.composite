<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.    
-->
<entry xmlns="http://www.w3.org/2005/Atom">
 <title type="text">testlogic</title>
 <id>testlogic</id>
 <content type="application/xml">
  <composite xmlns="http://docs.oasis-open.org/ns/opencsa/sca/200912" name="app" targetNamespace="http://app">
   <service name="cos" promote="cos"/>
   <service name="eval" promote="eval"/>
   <service name="eval2" promote="eval2"/>
   <service name="exec" promote="exec"/>
   <service name="exec2" promote="exec2"/>
   <service name="if" promote="if"/>
   <service name="random1" promote="random1"/>
   <service name="randoms1" promote="randoms1"/>
   <service name="randoms2" promote="randoms2"/>
   <service name="sin" promote="sin"/>
   <component x="20" y="170" name="cos" title="cos" color="cyan1">
    <implementation.python script="nuvem/cos_.py"/>
    <service name="cos"/>
    <reference target="number7" name="x"/>
   </component>
   <component x="150" y="10" name="eval" title="expr" color="cyan1">
    <implementation.python script="nuvem/eval_.py"/>
    <service name="eval"/>
    <reference target="text3" name="py"/>
    <reference name="ref"/>
   </component>
   <component x="170" y="70" name="eval2" title="expr" color="cyan1">
    <implementation.python script="nuvem/eval_.py"/>
    <service name="eval"/>
    <reference target="text4" name="py"/>
    <reference target="number3" name="ref"/>
   </component>
   <component x="150" y="210" name="exec" title="script" color="cyan1">
    <implementation.python script="nuvem/exec_.py"/>
    <service name="exec"/>
    <reference target="get" name="py"/>
    <reference target="number4" name="ref"/>
   </component>
   <component x="150" y="140" name="exec2" title="script" color="cyan1">
    <implementation.python script="nuvem/exec_.py"/>
    <service name="exec"/>
    <reference target="text6" name="py"/>
    <reference target="number5" name="ref"/>
   </component>
   <component name="get" title="get" color="green1">
    <implementation.cpp path="lib/http" library="libhttpget"/>
    <service name="get"/>
    <reference target="text5" name="url"/>
   </component>
   <component name="greater" title="gt" color="cyan1">
    <implementation.python script="nuvem/greater.py"/>
    <service name="greater"/>
    <reference target="number2" name="value1"/>
    <reference target="number" name="value2"/>
   </component>
   <component x="19" y="9" name="if" title="if" color="cyan1">
    <implementation.python script="nuvem/if_.py"/>
    <service name="if"/>
    <reference target="greater" name="condition"/>
    <reference target="text" name="then"/>
    <reference target="text2" name="else"/>
   </component>
   <component name="number" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>5</property>
   </component>
   <component x="390" y="10" name="number1" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>3</property>
   </component>
   <component x="480" y="90" name="number10" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>5</property>
   </component>
   <component x="530" y="120" name="number11" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>0</property>
   </component>
   <component x="520" y="140" name="number12" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>100</property>
   </component>
   <component name="number2" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>3</property>
   </component>
   <component name="number3" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>5</property>
   </component>
   <component name="number4" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>5</property>
   </component>
   <component name="number5" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>5</property>
   </component>
   <component name="number6" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>0.5</property>
   </component>
   <component name="number7" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>0.5</property>
   </component>
   <component x="490" y="0" name="number8" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>5</property>
   </component>
   <component x="480" y="40" name="number9" title="#" color="orange1">
    <implementation.python script="nuvem/number.py"/>
    <service name="number"/>
    <property>3</property>
   </component>
   <component x="310" y="10" name="random1" title="rand" color="cyan1">
    <implementation.python script="nuvem/random_.py"/>
    <service name="random"/>
    <reference target="number1" name="range"/>
   </component>
   <component x="390" y="10" name="randoms1" title="rands" color="cyan1">
    <implementation.python script="nuvem/randoms.py"/>
    <service name="randoms"/>
    <reference target="number8" name="n"/>
    <reference target="number9" name="range"/>
   </component>
   <component x="390" y="100" name="randoms2" title="rands" color="cyan1">
    <implementation.python script="nuvem/randoms.py"/>
    <service name="randoms"/>
    <reference target="number10" name="n"/>
    <reference target="range1" name="range"/>
   </component>
   <component x="480" y="120" name="range1" title="range" color="yellow1">
    <implementation.python script="nuvem/range_.py"/>
    <service name="range"/>
    <reference target="number11" name="first"/>
    <reference target="number12" name="last"/>
   </component>
   <component x="20" y="130" name="sin" title="sin" color="cyan1">
    <implementation.python script="nuvem/sin_.py"/>
    <service name="sin"/>
    <reference target="number6" name="x"/>
   </component>
   <component name="text" title=" '{propval}'" color="orange1">
    <implementation.python script="nuvem/text.py"/>
    <service name="text"/>
    <property>greater than 5</property>
   </component>
   <component name="text2" title=" '{propval}'" color="orange1">
    <implementation.python script="nuvem/text.py"/>
    <service name="text"/>
    <property>not greater than 5</property>
   </component>
   <component name="text3" title=" '{propval}'" color="orange1">
    <implementation.python script="nuvem/text.py"/>
    <service name="text"/>
    <property>3.14116 * 5 * 5</property>
   </component>
   <component name="text4" title=" '{propval}'" color="orange1">
    <implementation.python script="nuvem/text.py"/>
    <service name="text"/>
    <property>3.14116 * ref.get(r) * ref.get(r)</property>
   </component>
   <component name="text5" title=" '{propval}'" color="orange1">
    <implementation.python script="nuvem/text.py"/>
    <service name="text"/>
    <property>http://people.apache.org/~jsdelfino/tuscany/test/surface.py</property>
   </component>
   <component name="text6" title=" '{propval}'" color="orange1">
    <implementation.python script="nuvem/text.py"/>
    <service name="text"/>
    <property>val = 3.14116 * ref.get(r) * ref.get(r)</property>
   </component>
  </composite>
 </content>
 <link href="testlogic"/>
</entry>
