<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at
   
     http://www.apache.org/licenses/LICENSE-2.0
     
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<project name='compiler-targets'>

  <import file="./system.xml"/>

  <!--
    Do a cpp compilation.
    Inherits from "Tuscany-BaseCompiler", which has an include path of:
        ${sdo.include.dir}
        ${tuscanySCA.root.dir}
        ${tuscanySCA.root.src.dir}
        ${tuscanySCA.root.src.dir}/core/src
    @param objdir - directory where the object files will be written
    @param srcdir - directory where the source files are located.
    @param infiles - a space seperated list of the files to compile
    @param custom-cc-elements - any extra cpp elements, may also be extra <includepath> elements
  -->
  <macrodef name="cpp-compile">
    <attribute name="objdir" default="."/>
    <attribute name="srcdir" default="."/>
    <attribute name="infiles" default="*.cpp"/>
    <element name="custom-cc-elements" optional="true"/>
    <sequential>
      <mkdir dir='@{objdir}'/>
      <cc subsystem='console'
          objdir='@{objdir}'>
            <compiler refid='${compiler.name}-Compiler'/>
            <fileset dir='@{srcdir}' includes='@{infiles}'/>
            <custom-cc-elements/>
      </cc>

    </sequential>
  </macrodef>

  <!--
    Do a cpp link which results in either a library (linktype of plugin, shared, or static)
    or an executable (linktype of executable).
    Inherits from "Tuscany-BaseLinker"
    @param outfile - name of the library to create, OS prefixes and suffixes will be added
    @param destdir - directory where the library will be written
    @param infiles - a space seperated list of the object files to link
    @param linktype - executable, plugin, shared, static
    @param custom-ld-elements - any extra cpp elements, may also be extra <libset> elements
  -->
  <macrodef name="cpp-link">
    <attribute name="outfile" default="out"/>
    <attribute name="outdir" default="."/>
    <attribute name="indir" default="."/>
    <attribute name="infiles" default="*${object.ext}"/>
    <attribute name="linktype" default="shared"/>
    <element name="custom-ld-elements" optional="true"/>
    <sequential>
      <mkdir dir='@{outdir}'/>
      <cc link='@{linktype}'
          subsystem='console'
          outfile='@{outdir}/@{outfile}'>
            <linker refid='${compiler.name}-Linker'/>
            <fileset dir='@{indir}' includes='@{infiles}'/>
            <custom-ld-elements/>
      </cc>

    </sequential>
  </macrodef>

  <!--
    Do a cpp build which compiles and links, resulting in either a library (linktype
    of plugin, shared, or static) or an executable (linktype of executable).
    Inherits from both "Tuscany-BaseCompiler" and "Tuscany-BaseLinker"
    @param srcdir  - directory where the source files are located.
    @param infiles - a space seperated list of the source files to compile and link
    @param outdir  - directory where the output file will be written
    @param outfile - name of the library or binary to create, OS prefixes and suffixes may be added
    @param outtype - executable, plugin, shared, static
    @param custom-build-elements - any extra elements needed for compiling or linking
                                   may also be extra <includepath> or <libset> elements
  -->
  <macrodef name="cpp-build">
    <attribute name="srcdir" default="."/>
    <attribute name="infiles" default="*.cpp"/>
    <attribute name="outdir" default="."/>
    <attribute name="outfile" default="out"/>
    <attribute name="outtype" default="shared"/>
    <element name="custom-build-elements" optional="true"/>
    <sequential>
      <mkdir dir='@{outdir}'/>
      <cc outtype='@{outtype}'
          subsystem='console'
          objdir='@{outdir}'
          outfile='@{outdir}/@{outfile}'>
            <compiler refid='${compiler.name}-Compiler'/>
            <linker refid='${compiler.name}-Linker'/>
            <fileset dir='@{srcdir}' includes='@{infiles}'/>
            <custom-build-elements/>
      </cc>

    </sequential>
  </macrodef>

  <!--
    Install cpp library
    @param libs - library files to install
    @param srclibdir - location of library files to install
    @param destlibdir - Where to install library files
  -->
  <macrodef name="cpp-install-lib">
    <attribute name="libs" default="${lib.prefix}*${lib.ext}"/>
    <attribute name="srclibdir" default="."/>
    <attribute name="destlibdir" default="."/>
    <sequential>
      <mkdir dir="@{destlibdir}"/>
      <copy todir="@{destlibdir}" overwrite='true'>
        <fileset dir="@{srclibdir}" includes="@{libs}"/>
      </copy>
      <chmod file="@{destlibdir}/@{libs}" perm="755"/>
    </sequential>
  </macrodef>

  <!--
    Install cpp headers
    @param files - header files to install
    @param srcdir - location of header files to install
    @param destdir - Where to install header files
  -->
  <macrodef name="cpp-install-headers">
    <attribute name="files" default="*.h"/>
    <attribute name="srcdir" default="."/>
    <attribute name="destdir" default="."/>
    <sequential>
      <mkdir dir="@{destdir}"/>
      <copy todir="@{destdir}" overwrite='true'>
        <fileset dir="@{srcdir}" includes="@{files}"/>
      </copy>
    </sequential>
  </macrodef>

</project>
