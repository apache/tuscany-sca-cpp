<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at
   
     http://www.apache.org/licenses/LICENSE-2.0
     
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<project name="system-import">

  <property file="./platform.properties"/>
  <property environment="env"/>

  <!-- These 3 lines pull in antcontrib and cctasks -->
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>
  <taskdef resource="cpptasks.tasks"/>
  <typedef resource="cpptasks.types"/>

  <!--
     Configure the tuscanySDO.install.dir, sdo.include.dir, and sdo.lib.dir
     Take the override value from platform.properties if set
     Else take it from the env var TUSCANY_SDOCPP
     Else fail since we cant compile without it
  -->
  <if>
    <isset property="platform.tuscanySDO.install.dir"/>
    <then>
      <property name="tuscanySDO.install.dir" location="${platform.tuscanySDO.install.dir}"/>
    </then>
    <elseif>
      <isset property="env.TUSCANY_SDOCPP"/>
      <then>
        <property name="tuscanySDO.install.dir" location="${env.TUSCANY_SDOCPP}"/>
      </then>
    </elseif>
    <else>
      <fail message="Unable to find SDO installation, must be set by TUSCANY_SDOCPP or in platform.properties file"/>
    </else>
  </if>
  <property name="sdo.include.dir" location="${tuscanySDO.install.dir}/include"/>
  <property name="sdo.lib.dir"     location="${tuscanySDO.install.dir}/lib"/>

  <!--
     Configure the tuscanySCA.root.dir
     Take the override value from platform.properties if set
  -->
  <if>
    <isset property="platform.tuscanySCA.root.dir"/>
    <then>
      <property name="tuscanySCA.root.dir" location="${platform.tuscanySCA.root.dir}"/>
    </then>
    <else>
      <property name="tuscanySCA.root.dir" location="."/>
    </else>
  </if>

  <property name="tuscanySCA.root.src.dir" location="${tuscanySCA.root.dir}/runtime"/>

  <!--
     Configure the tuscanySCA.install.dir
     Take the override value from platform.properties if set
     Else take it from the env var TUSCANY_SCACPP
     Else use a default of ${tuscanySCA.root.dir}/deploy
  -->
  <if>
    <isset property="platform.tuscanySCA.install.dir"/>
    <then>
      <property name="tuscanySCA.install.dir" location="${platform.tuscanySCA.install.dir}"/>
    </then>
    <elseif>
      <isset property="env.TUSCANY_SCACPP"/>
      <then>
        <property name="tuscanySCA.install.dir" location="${env.TUSCANY_SCACPP}"/>
      </then>
    </elseif>
    <else>
      <property name="tuscanySCA.install.dir" location="${tuscanySCA.root.dir}/deploy"/>
    </else>
  </if>

  <!--
     Configure the version for all tuscanySCA libraries
     If on windows, set it to empty
     Else take the override value from platform.properties if set
     Else default it to "0.0.0"
  -->
  <if>
    <os family="windows"/>
    <then>
      <property name="tuscanySCA.library.version" value=""/>
    </then>
    <elseif>
      <isset property="platform.tuscanySCA.library.version"/>
      <then>
        <property name="tuscanySCA.library.version" value="${platform.tuscanySCA.library.version}"/>
      </then>
    </elseif>
    <else>
      <property name="tuscanySCA.library.version" value=".0.0.0"/>
    </else>
  </if>

  <!--
     Configure ${enable_ws} and ${axis2c.home.dir}, which is needed to compile the ws extension
     Take the override value from platform.properties if set
     Else take it from the env var AXIS2C_HOME
  -->
  <target name="check.ws">
  <if>
    <isset property="platform.axis2c.home.dir"/>
    <then>
      <property name="enable_ws" value="true"/>
      <property name="axis2c.home.dir" location="${platform.axis2c.home.dir}"/>
    </then>
    <elseif>
      <isset property="env.AXIS2C_HOME"/>
      <then>
        <property name="enable_ws" value="true"/>
        <property name="axis2c.home.dir" location="${env.AXIS2C_HOME}"/>
      </then>
    </elseif>
    <else>
      <echo message="TuscanySCA ws extension is not enabled" level="warning"/>
    </else>
  </if>
  </target>

  <!--
     Configure ${enable_python} and related python properties, which are needed
     to compile the python extension
     Take the override value from platform.properties if set
     Else check env vars PYTHON_LIB, PYTHON_INCLUDE, and PYTHON_VERSION
  -->
  <target name="check.python">
  <if>
    <and>
      <isset property="platform.python.version"/>
      <isset property="platform.python.include.dir"/>
      <isset property="platform.python.lib.dir"/>
    </and>
    <then>
      <property name="enable_python" value="true"/>
      <property name="python.lib.dir"     location="${platform.python.lib.dir}"/>
      <property name="python.include.dir" location="${platform.python.include.dir}"/>
      <property name="python.version"     value="${platform.python.version}"/>
    </then>
    <elseif>
      <and>
        <isset property="env.PYTHON_LIB"/>
        <isset property="env.PYTHON_INCLUDE"/>
        <isset property="env.PYTHON_VERSION"/>
      </and>
      <then>
        <property name="enable_python" value="true"/>
        <property name="python.lib.dir"     location="${env.PYTHON_LIB}"/>
        <property name="python.include.dir" location="${env.PYTHON_INCLUDE}"/>
        <property name="python.version"     value="${env.PYTHON_VERSION}"/>
      </then>
    </elseif>
    <else>
      <echo message="TuscanySCA python extension is not enabled" level="warning"/>
    </else>
  </if>
  </target>

  <!--
     Configure ${enable_ruby} and related ruby properties, which are needed
     to compile the ruby extension
     Take the override value from platform.properties if set
     Else check env vars RUBY_LIB and RUBY_INCLUDE
  -->
  <target name="check.ruby">
  <if>
    <and>
      <isset property="platform.ruby.include.dir"/>
      <isset property="platform.ruby.lib.dir"/>
    </and>
    <then>
      <property name="enable_ruby" value="true"/>
      <property name="ruby.lib.dir"     location="${platform.ruby.lib.dir}"/>
      <property name="ruby.include.dir" location="${platform.ruby.include.dir}"/>
    </then>
    <elseif>
      <and>
        <isset property="env.RUBY_LIB"/>
        <isset property="env.RUBY_INCLUDE"/>
      </and>
      <then>
        <property name="enable_ruby" value="true"/>
        <property name="ruby.lib.dir"     location="${env.RUBY_LIB}"/>
        <property name="ruby.include.dir" location="${env.RUBY_INCLUDE}"/>
      </then>
    </elseif>
    <else>
      <echo message="TuscanySCA ruby extension is not enabled" level="warning"/>
    </else>
  </if>
  </target>

  <!--
     Configure ${enable_rest} and related ruby properties, which are needed
     to compile the rest extension
     Take the override value from platform.properties if set
     Else check env vars CURL_LIB, CURL_INCLUDE, HTTPD_INCLUDE, and APR_INCLUDE
  -->
  <target name="check.rest">
  <if>
    <and>
      <isset property="platform.rest.include.dir"/>
      <isset property="platform.rest.lib.dir"/>
    </and>
    <then>
      <property name="enable_rest" value="true"/>
      <property name="rest.curl.lib.dir"       location="${platform.rest.curl.lib.dir}"/>
      <property name="rest.curl.include.dir"   location="${platform.rest.curl.include.dir}"/>
      <property name="rest.httpd.include.dir"  location="${platform.rest.httpd.include.dir}"/>
      <property name="rest.apr.include.dir"    location="${platform.rest.apr.include.dir}"/>
    </then>
    <elseif>
      <and>
        <isset property="env.CURL_LIB"/>
        <isset property="env.CURL_INCLUDE"/>
        <isset property="env.HTTPD_INCLUDE"/>
        <isset property="env.APR_INCLUDE"/>
      </and>
      <then>
        <property name="enable_rest" value="true"/>
        <property name="rest.curl.lib.dir"       location="${env.CURL_LIB}"/>
        <property name="rest.curl.include.dir"   location="${env.CURL_INCLUDE}"/>
        <property name="rest.httpd.include.dir"  location="${env.HTTPD_INCLUDE}"/>
        <property name="rest.apr.include.dir"    location="${env.APR_INCLUDE}"/>
      </then>
    </elseif>
    <else>
      <echo message="TuscanySCA rest extension is not enabled" level="warning"/>
    </else>
  </if>
  </target>

  <!--
     Configure ${enable_php} and related php properties, which are needed
     to compile the php extension
     Take the override value from platform.properties if set
     Else check env vars CURL_LIB, CURL_INCLUDE, HTTPD_INCLUDE, and APR_INCLUDE
  -->
  <target name="check.php">
  <if>
    <and>
      <isset property="platform.php.include.dir"/>
      <isset property="platform.php.lib.dir"/>
      <isset property="platform.php.sca.sdo.include.dir"/>
      <isset property="platform.php.sca.sdo.lib.dir"/>
    </and>
    <then>
      <property name="enable_php" value="true"/>
      <property name="php.include.dir"          location="${platform.php.include.dir}"/>
      <property name="php.lib.dir"              location="${platform.php.lib.dir}"/>
      <property name="php.sca.sdo.include.dir"  location="${platform.php.sca.sdo.include.dir}"/>
      <property name="php.sca.sdo.lib.dir"      location="${platform.php.sca.sdo.lib.dir}"/>
    </then>
    <elseif>
      <and>
        <isset property="env.PHP_LIB"/>
        <isset property="env.PHP_INCLUDE"/>
        <isset property="env.PHP_SCA_SDO_LIB"/>
        <isset property="env.PHP_SCA_SDO_INCLUDE"/>
      </and>
      <then>
        <property name="enable_php" value="true"/>
        <property name="php.include.dir"          location="${env.PHP_INCLUDE}"/>
        <property name="php.lib.dir"              location="${env.PHP_LIB}"/>
        <property name="php.sca.sdo.include.dir"  location="${env.PHP_SCA_SDO_INCLUDE}"/>
        <property name="php.sca.sdo.lib.dir"      location="${env.PHP_SCA_SDO_LIB}"/>
      </then>
    </elseif>
    <else>
      <echo message="TuscanySCA php extension is not enabled" level="warning"/>
    </else>
  </if>
  </target>

  <!--
     Configure the compiler.name
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.compiler.name"/>
    <then>
      <property name="compiler.name" value="${platform.compiler.name}"/>
    </then>
    <else>
      <condition property="compiler.name" value="msvc8">
        <os family="windows"/>
      </condition>

      <condition property="compiler.name" value="g++">
        <or>
          <os family="unix"/>
          <os family="mac"/>
        </or>
      </condition>
    </else>
  </if>

  <!--
     Configure the lib.ext
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.lib.ext"/>
    <then>
      <property name="lib.ext" value="${platform.lib.ext}"/>
    </then>
    <else>
      <condition property="lib.ext" value=".lib">
        <os family="windows"/>
      </condition>

      <condition property="lib.ext" value=".dylib">
        <os family="mac"/>
      </condition>

      <condition property="lib.ext" value=".so">
        <os family="unix"/>
      </condition>
    </else>
  </if>

  <!--
     Configure the dll.ext, used for windows only
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.dll.ext"/>
    <then>
      <property name="dll.ext" value="${platform.dll.ext}"/>
    </then>
    <else>
      <condition property="dll.ext" value=".dll">
        <os family="windows"/>
      </condition>

      <property name="dll.ext" value=""/>

    </else>
  </if>

  <!--
     Configure the lib.prefix
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.lib.prefix"/>
    <then>
      <property name="lib.prefix" value="${platform.lib.prefix}"/>
    </then>
    <else>
      <condition property="lib.prefix" value="">
        <os family="windows"/>
      </condition>

      <condition property="lib.prefix" value="lib">
        <or>
          <os family="unix"/>
          <os family="mac"/>
        </or>
      </condition>
    </else>
  </if>


  <!--
     Configure the object.ext
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.object.ext"/>
    <then>
      <property name="object.ext" value="${platform.object.ext}"/>
    </then>
    <else>
      <condition property="object.ext" value=".obj">
        <os family="windows"/>
      </condition>

      <condition property="object.ext" value=".o">
        <or>
          <os family="unix"/>
          <os family="mac"/>
        </or>
      </condition>
    </else>
  </if>


  <!--
     Configure the exe.ext
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.exe.ext"/>
    <then>
      <property name="exe.ext" value="${platform.exe.ext}"/>
    </then>
    <else>
      <condition property="exe.ext" value=".exe">
        <os family="windows"/>
      </condition>

      <condition property="exe.ext" value="">
        <or>
          <os family="unix"/>
          <os family="mac"/>
        </or>
      </condition>
    </else>
  </if>


  <!--
     Configure the script.ext
     Take the override value from platform.properties if set
     Else set it based on the OS
  -->
  <if>
    <isset property="platform.script.ext"/>
    <then>
      <property name="script.ext" value="${platform.script.ext}"/>
    </then>
    <else>
      <condition property="script.ext" value=".bat">
        <os family="windows"/>
      </condition>

      <condition property="script.ext" value=".sh">
        <or>
          <os family="unix"/>
          <os family="mac"/>
        </or>
      </condition>
    </else>
  </if>

  <target name="display.system" depends="check.ws,check.python,check.php,check.ruby,check.rest">

    <!-- Tuscany paths, etc -->
    <echo message=" "/>
    <echo message="TuscanySCA paths"/>
    <echo message="  tuscanySDO.install.dir=      ${tuscanySDO.install.dir}"/>
    <echo message="  tuscanySCA.root.dir=         ${tuscanySCA.root.dir}"/>
    <echo message="  tuscanySCA.root.src.dir=     ${tuscanySCA.root.src.dir}"/>
    <echo message="  tuscanySCA.install.dir=      ${tuscanySCA.install.dir}"/>
    <echo message="  tuscanySCA.library.version=  '${tuscanySCA.library.version}'"/>

    <!-- compilers, libs, etc -->
    <echo message=" "/>
    <echo message="TuscanySCA compiler configuration"/>
    <echo message="  compiler.name=               '${compiler.name}'"/>
    <echo message="  lib.ext=                     '${lib.ext}'"/>
    <echo message="  dll.ext=                     '${dll.ext}'"/>
    <echo message="  lib.prefix=                  '${lib.prefix}'"/>
    <echo message="  object.ext=                  '${object.ext}'"/>
    <echo message="  exe.ext=                     '${exe.ext}'"/>
    <echo message="  script.ext=                  '${script.ext}'"/>

    <!-- ws extention -->
    <if>
      <isset property="enable_ws"/>
      <then>
        <echo message=" "/>
        <echo message="TuscanySCA ws extension enabled"/>
        <echo message="  axis2c.home.dir=          ${axis2c.home.dir}"/>
      </then>
    </if>

    <!-- php extention -->
    <if>
      <isset property="enable_php"/>
      <then>
        <echo message=" "/>
        <echo message="TuscanySCA php extension enabled"/>
        <echo message="  php.lib.dir=              ${php.lib.dir}"/>
        <echo message="  php.include.dir=          ${php.include.dir}"/>
        <echo message="  php.sca.sdo.lib.dir=      ${php.sca.sdo.lib.dir}"/>
        <echo message="  php.sca.sdo.include.dir=  ${php.sca.sdo.include.dir}"/>
      </then>
    </if>

    <!-- python extention -->
    <if>
      <isset property="enable_python"/>
      <then>
        <echo message=" "/>
        <echo message="TuscanySCA python extension enabled"/>
        <echo message="  python.lib.dir=           ${python.lib.dir}"/>
        <echo message="  python.include.dir=       ${python.include.dir}"/>
        <echo message="  python.version=           ${python.version}"/>
      </then>
    </if>

    <!-- rest extention -->
    <if>
      <isset property="enable_rest"/>
      <then>
        <echo message=" "/>
        <echo message="TuscanySCA rest extension enabled"/>
        <echo message="  rest.curl.lib.dir=        ${rest.curl.lib.dir}"/>
        <echo message="  rest.curl.include.dir=    ${rest.curl.include.dir}"/>
        <echo message="  rest.httpd.include.dir=   ${rest.httpd.include.dir}"/>
        <echo message="  rest.apr.include.dir=     ${rest.apr.include.dir}"/>
      </then>
    </if>

    <!-- ruby extention -->
    <if>
      <isset property="enable_ruby"/>
      <then>
        <echo message=" "/>
        <echo message="TuscanySCA ruby extension enabled"/>
        <echo message="  ruby.lib.dir=             ${ruby.lib.dir}"/>
        <echo message="  ruby.include.dir=         ${ruby.include.dir}"/>
      </then>
    </if>

    <echo message=" "/>

  </target>


  <condition property="windows" value="true">
    <os family="windows"/>
  </condition>

  <condition property="mac" value="true">
    <os family="mac"/>
  </condition>

  <!--
     Base compiler definition
    -->
  <compiler id="Tuscany-BaseCompiler" multithreaded="true" exceptions="true" rtti="true">
    <defineset if="windows" define="WIN32,_CRT_SECURE_NO_DEPRECATE"/>
    <defineset if="mac" define="IS_DARWIN"/>
    <includepath path="${sdo.include.dir}"/>
    <includepath path="${tuscanySCA.root.src.dir}"/>
    <includepath path="${tuscanySCA.root.src.dir}/core/src"/>
  </compiler>

  <!--
     Specific compiler definitions
    -->
  <compiler id="msvc-Compiler" extends="Tuscany-BaseCompiler" name="msvc"/>
  <compiler id="msvc8-Compiler" extends="Tuscany-BaseCompiler" name="msvc" exceptions="false">
    <compilerarg value="/EHsc"/>
  </compiler>
  <compiler id="g++-Compiler" extends="Tuscany-BaseCompiler" name="g++"/>
 
  <!-- Used for cross compilation with the -m32 flag -->
  <compiler id="g++m32-Compiler" extends="Tuscany-BaseCompiler" name="g++">
    <compilerarg value="-m32"/>
  </compiler>

  <!--
     Base linker definition
    -->
  <linker id="Tuscany-BaseLinker">
    <syslibset if="windows" libs="kernel32,user32,ws2_32"/>
    <libset dir="${sdo.lib.dir}" libs="tuscany_sdo"/>
  </linker>

  <!--
     Specific linker definitions
    -->
  <linker id="msvc-Linker" extends="Tuscany-BaseLinker" name="msvc"/>
  <linker id="msvc8-Linker" extends="Tuscany-BaseLinker" name="msvc"/>
  <linker id="g++-Linker" extends="Tuscany-BaseLinker" name="g++"/>
  <linker id="g++m32-Linker" extends="Tuscany-BaseLinker" name="g++">
    <linkerarg value="-m32"/>
  </linker>

</project>
