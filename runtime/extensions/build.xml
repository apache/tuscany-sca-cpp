<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at
   
     http://www.apache.org/licenses/LICENSE-2.0
     
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<project name="TuscanyScaNative_extensions" default="all" basedir="../..">

  <!--
    Notice that the basedir for this project is set to the TuscanySCA root dir
    This makes path setting in system.xml much simpler, but we'll just have to
    set a property here to this directory.
  -->
  <property name="this.dir"    location="${basedir}/runtime/extensions"/>
  <property name="cpp.dir"     location="${this.dir}/cpp"/>
  <property name="php.dir"     location="${this.dir}/php"/>
  <property name="python.dir"  location="${this.dir}/python"/>
  <property name="rest.dir"    location="${this.dir}/rest"/>
  <property name="ruby.dir"    location="${this.dir}/ruby"/>
  <property name="sca.dir"     location="${this.dir}/sca"/>
  <property name="ws.dir"      location="${this.dir}/ws"/>

  <!--
    Public targets
  -->
  <target name="all"
      description="build and install all TuscanyScaNative extensions source code">
    <antcall target="build"/>
    <antcall target="install"/>
  </target>

  <target name="build" description="Build all TuscanyScaNative extensions source code">
    <antcall target="build.extension.cpp"/>
    <antcall target="build.extension.php"/>
    <antcall target="build.extension.python"/>
    <antcall target="build.extension.rest"/>
    <antcall target="build.extension.ruby"/>
    <antcall target="build.extension.sca"/>
    <antcall target="build.extension.ws"/>
  </target>

  <target name="install" description="Install TuscanyScaNative extensions libraries and headers">
    <antcall target="install.extension.cpp"/>
    <antcall target="install.extension.php"/>
    <antcall target="install.extension.python"/>
    <antcall target="install.extension.rest"/>
    <antcall target="install.extension.ruby"/>
    <antcall target="install.extension.sca"/>
    <antcall target="install.extension.ws"/>
  </target>

  <target name="clean" description="Clean all TuscanyScaNative extensions built source code">
    <antcall target="clean.extension.cpp"/>
    <antcall target="clean.extension.php"/>
    <antcall target="clean.extension.python"/>
    <antcall target="clean.extension.rest"/>
    <antcall target="clean.extension.ruby"/>
    <antcall target="clean.extension.sca"/>
    <antcall target="clean.extension.ws"/>
  </target>

  <!--
    Internal targets
    They can still be called, they're just not described, so wont show up in "ant -p"
  -->

    <!-- build -->

  <target name="build.extension.cpp">
    <ant target="build" antfile="${cpp.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.extension.php">
    <!-- TODO PHP build.xml not ready yet
    <ant target="build" antfile="${php.dir}/build.xml" inheritAll="false"/>
    -->
  </target>

  <target name="build.extension.python">
    <ant target="build" antfile="${python.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.extension.rest">
    <ant target="build" antfile="${rest.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.extension.ruby">
    <ant target="build" antfile="${ruby.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.extension.sca">
    <ant target="build" antfile="${sca.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.extension.ws">
    <ant target="build" antfile="${ws.dir}/build.xml" inheritAll="false"/>
  </target>

    <!-- install -->

  <target name="install.extension.cpp">
    <ant target="install" antfile="${cpp.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.extension.php">
    <!-- TODO PHP build.xml not ready yet
    <ant target="install" antfile="${php.dir}/build.xml" inheritAll="false"/>
    -->
  </target>

  <target name="install.extension.python">
    <ant target="install" antfile="${python.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.extension.rest">
    <ant target="install" antfile="${rest.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.extension.ruby">
    <ant target="install" antfile="${ruby.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.extension.sca">
    <ant target="install" antfile="${sca.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.extension.ws">
    <ant target="install" antfile="${ws.dir}/build.xml" inheritAll="false"/>
  </target>

    <!-- clean -->

  <target name="clean.extension.cpp">
    <ant target="clean" antfile="${cpp.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.extension.php">
    <!-- TODO PHP build.xml not ready yet
    <ant target="clean" antfile="${php.dir}/build.xml" inheritAll="false"/>
    -->
  </target>

  <target name="clean.extension.python">
    <ant target="clean" antfile="${python.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.extension.rest">
    <ant target="clean" antfile="${rest.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.extension.ruby">
    <ant target="clean" antfile="${ruby.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.extension.sca">
    <ant target="clean" antfile="${sca.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.extension.ws">
    <ant target="clean" antfile="${ws.dir}/build.xml" inheritAll="false"/>
  </target>

</project>
