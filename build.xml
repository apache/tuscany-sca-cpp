<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at
   
     http://www.apache.org/licenses/LICENSE-2.0
     
   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->

<project name="TuscanyScaNative" default="all" basedir=".">

  <!--
    This is the root level ant build.xml file for TuscanySCA Native
    Nothing is actually performed here, it just delegates to subdirectory
    build.xml files. Common scripts used by all ant build files can be
    found in the ant subdirectory.
  --> 
    
  <import file="antscripts/system.xml"/>

  <property name="runtime.core.dir"  location="runtime/core"/>
  <property name="extensions.dir"    location="runtime/extensions"/>
  <property name="test.dir"          location="runtime/core/test"/>
  <property name="samples.dir"       location="samples"/>
  <property name="tools.dir"         location="tools"/>
 	
  <!--
    Public targets
  -->

  <target name="all" description="build and install all TuscanyScaNative source code">
    <antcall target="build.core"/>
    <antcall target="install.core"/>
    <antcall target="build.extensions"/>
    <antcall target="install.extensions"/>
  </target>

  <target name="build" description="Build all TuscanyScaNative source code">
    <antcall target="build.core"/>
    <antcall target="build.extensions"/>
  </target>

  <target name="install" description="Install TuscanyScaNative libraries and headers">
    <antcall target="install.core"/>
    <antcall target="install.extensions"/>
  </target>

  <target name="samples" description="Build and Install all TuscanyScaNative samples">
    <antcall target="build.samples"/>
  </target>

  <target name="tools" description="Build and Install all TuscanyScaNative tools">
    <antcall target="build.tools"/>
  </target>

  <target name="tests" description="Build and run all TuscanyScaNative tests">
    <ant target="all" antfile="${test.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean" description="Clean all TuscanyScaNative source code, samples, and tools">
    <antcall target="clean.core"/>
    <antcall target="clean.extensions"/>
    <antcall target="clean.samples"/>
    <antcall target="clean.tests"/>
    <antcall target="clean.tools"/>
  </target>

  <!--
    Internal targets
    They can still be called, they're just not described, so wont show up in "ant -p"
    Using antfile and inheritAll="false" to maintain the subdir build.xml basedir settings
  -->

  <target name="build.core">
    <ant target="build" antfile="${runtime.core.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.extensions">
    <ant target="build" antfile="${extensions.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.core">
    <ant target="install" antfile="${runtime.core.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="install.extensions">
    <ant target="install" antfile="${extensions.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.samples">
    <ant target="all" antfile="${samples.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="build.tools">
    <ant target="all" antfile="${tools.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.core">
    <ant target="clean" antfile="${runtime.core.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.extensions">
    <ant target="clean" antfile="${extensions.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.tests">
    <ant target="clean" antfile="${test.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.tools">
    <ant target="clean" antfile="${tools.dir}/build.xml" inheritAll="false"/>
  </target>

  <target name="clean.samples">
    <ant target="clean" antfile="${samples.dir}/build.xml" inheritAll="false"/>
  </target>

</project>
